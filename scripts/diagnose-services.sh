#!/bin/bash
# ============================================
# Comprehensive Service Diagnostics Script
# ============================================

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo "=================================================="
echo "üîç –ö–û–ú–ü–õ–ï–ö–°–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–ï–†–í–ò–°–û–í"
echo "=================================================="
echo ""

# Test 1: Check if ports are listening
echo -e "${BLUE}[1/7] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤...${NC}"
for port in 3000 3001 3002 3003 3004 3005 3006 3007 5434 9000; do
    if command -v netstat &> /dev/null; then
        if netstat -tuln | grep -q ":${port} "; then
            echo -e "  ${GREEN}‚úì${NC} –ü–æ—Ä—Ç ${port} –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
        else
            echo -e "  ${RED}‚úó${NC} –ü–æ—Ä—Ç ${port} –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
        fi
    elif command -v ss &> /dev/null; then
        if ss -tuln | grep -q ":${port} "; then
            echo -e "  ${GREEN}‚úì${NC} –ü–æ—Ä—Ç ${port} –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
        else
            echo -e "  ${RED}‚úó${NC} –ü–æ—Ä—Ç ${port} –Ω–µ –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–µ—Ç—Å—è"
        fi
    else
        echo -e "  ${YELLOW}‚ö†${NC}  netstat/ss –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã, –ø—Ä–æ–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤"
        break
    fi
done
echo ""

# Test 2: Check service connectivity from host
echo -e "${BLUE}[2/7] –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–∏—Å–∞–º —Å —Ö–æ—Å—Ç–∞...${NC}"
services=(
    "Frontend:3000:/api/healthz"
    "Auth:3001:/healthz"
    "Catalog:3002:/healthz"
    "Enquiries:3003:/healthz"
    "Billing:3004:/healthz"
    "Vendors:3005:/healthz"
    "Guests:3006:/healthz"
    "Payments:3007:/healthz"
)

for service_info in "${services[@]}"; do
    IFS=':' read -r name port path <<< "$service_info"
    echo -n "  –¢–µ—Å—Ç ${name} (${port}${path})... "
    
    if timeout 5 curl -fsS "http://localhost:${port}${path}" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úì OK${NC}"
    else
        echo -e "${RED}‚úó FAIL${NC}"
        # Try to get more info
        if timeout 5 curl -v "http://localhost:${port}${path}" 2>&1 | head -20; then
            :
        fi
    fi
done
echo ""

# Test 3: Check database connectivity
echo -e "${BLUE}[3/7] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...${NC}"
if command -v psql &> /dev/null; then
    if PGPASSWORD=pg psql -h localhost -p 5434 -U pg -d wt -c "SELECT 1" &>/dev/null; then
        echo -e "  ${GREEN}‚úì${NC} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–æ—Å—Ç—É–ø–Ω–∞"
    else
        echo -e "  ${RED}‚úó${NC} –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
    fi
else
    echo -e "  ${YELLOW}‚ö†${NC}  psql –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ curl..."
    # If psql not available, we can't test DB directly
fi
echo ""

# Test 4: Check if services can resolve each other
echo -e "${BLUE}[4/7] –ü—Ä–æ–≤–µ—Ä–∫–∞ DNS —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∏–º–µ–Ω —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
if command -v docker &> /dev/null; then
    # Test DNS resolution from within a container
    if docker ps --format "{{.Names}}" | grep -q "svc-auth"; then
        echo "  –¢–µ—Å—Ç —Ä–µ–∑–æ–ª–≤–∏–Ω–≥–∞ –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ svc-auth:"
        for svc in db minio svc-catalog svc-enquiries; do
            echo -n "    ${svc}... "
            if docker exec workspace-svc-auth-1 getent hosts ${svc} >/dev/null 2>&1 || \
               docker exec workspace_svc-auth_1 getent hosts ${svc} >/dev/null 2>&1 || \
               docker exec svc-auth getent hosts ${svc} >/dev/null 2>&1; then
                echo -e "${GREEN}‚úì${NC}"
            else
                echo -e "${RED}‚úó${NC}"
            fi
        done
    else
        echo -e "  ${YELLOW}‚ö†${NC}  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
    fi
else
    echo -e "  ${YELLOW}‚ö†${NC}  Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi
echo ""

# Test 5: Check network connectivity between containers
echo -e "${BLUE}[5/7] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–≤–æ–π —Å–≤—è–∑–Ω–æ—Å—Ç–∏ –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏...${NC}"
if command -v docker &> /dev/null && docker ps -q | grep -q .; then
    echo "  –¢–µ—Å—Ç —Å–≤—è–∑–Ω–æ—Å—Ç–∏ –∏–∑ svc-auth –∫ –¥—Ä—É–≥–∏–º —Å–µ—Ä–≤–∏—Å–∞–º:"
    for target in svc-catalog:3002 svc-enquiries:3003 db:5432; do
        IFS=':' read -r host port <<< "$target"
        echo -n "    ${host}:${port}... "
        if docker exec workspace-svc-auth-1 timeout 2 sh -c "echo > /dev/tcp/${host}/${port}" 2>/dev/null || \
           docker exec workspace_svc-auth_1 timeout 2 sh -c "echo > /dev/tcp/${host}/${port}" 2>/dev/null || \
           docker exec svc-auth timeout 2 sh -c "echo > /dev/tcp/${host}/${port}" 2>/dev/null; then
            echo -e "${GREEN}‚úì${NC}"
        else
            echo -e "${RED}‚úó${NC}"
        fi
    done
else
    echo -e "  ${YELLOW}‚ö†${NC}  Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
fi
echo ""

# Test 6: Check Docker network configuration
echo -e "${BLUE}[6/7] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Docker —Å–µ—Ç–∏...${NC}"
if command -v docker &> /dev/null; then
    echo "  Docker Networks:"
    docker network ls | grep -E "workspace|bridge" || echo "    –ù–µ—Ç —Å–µ—Ç–µ–π workspace"
    
    echo ""
    echo "  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∏ –∏—Ö —Å–µ—Ç–∏:"
    docker ps --format "table {{.Names}}\t{{.Networks}}" | head -15 || true
else
    echo -e "  ${YELLOW}‚ö†${NC}  Docker –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi
echo ""

# Test 7: Test actual HTTP endpoints with response validation
echo -e "${BLUE}[7/7] –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–æ–≤ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π...${NC}"
for service_info in "${services[@]}"; do
    IFS=':' read -r name port path <<< "$service_info"
    echo -n "  ${name}... "
    
    response=$(timeout 5 curl -fsS "http://localhost:${port}${path}" 2>&1 || echo "error")
    
    if echo "$response" | grep -q '"status":"ok"' || echo "$response" | grep -q '"status": "ok"'; then
        echo -e "${GREEN}‚úì OK - –í–∞–ª–∏–¥–Ω—ã–π –æ—Ç–≤–µ—Ç${NC}"
    elif [ "$response" = "error" ]; then
        echo -e "${RED}‚úó FAIL - –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è${NC}"
    else
        echo -e "${YELLOW}‚ö† WARNING - –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç:${NC} ${response:0:50}"
    fi
done
echo ""

echo "=================================================="
echo -e "${BLUE}–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞${NC}"
echo "=================================================="
