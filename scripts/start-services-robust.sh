#!/bin/bash
# ============================================
# –ù–∞–¥–µ–∂–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤ —Å –ø–æ–ª–Ω–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–µ–π
# ============================================

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m'

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
MAX_RETRIES=30
RETRY_DELAY=2
PID_DIR="/tmp/weddingtech-pids"
LOG_DIR="/tmp/weddingtech-logs"

echo -e "${BLUE}=================================================="
echo "üöÄ –ù–ê–î–ï–ñ–ù–´–ô –ó–ê–ü–£–°–ö WEDDINGTECH –°–ï–†–í–ò–°–û–í"
echo "==================================================${NC}"
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
mkdir -p "$PID_DIR" "$LOG_DIR"

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ -f .env ]; then
    export $(cat .env | grep -v '^#' | grep -v '^$' | xargs)
fi

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞
wait_for_service() {
    local name=$1
    local port=$2
    local path=${3:-/healthz}
    local max_retries=${4:-$MAX_RETRIES}
    
    echo -n "   –û–∂–∏–¥–∞–Ω–∏–µ ${name} (–ø–æ—Ä—Ç ${port})... "
    
    for i in $(seq 1 $max_retries); do
        if curl -fsS "http://localhost:${port}${path}" >/dev/null 2>&1; then
            echo -e "${GREEN}‚úì –ì–æ—Ç–æ–≤${NC}"
            return 0
        fi
        
        if [ $i -eq $max_retries ]; then
            echo -e "${RED}‚úó Timeout –ø–æ—Å–ª–µ ${max_retries} –ø–æ–ø—ã—Ç–æ–∫${NC}"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            local service_name=$(echo $name | tr '[:upper:]' '[:lower:]' | tr ' ' '-')
            if [ -f "${LOG_DIR}/${service_name}.log" ]; then
                echo -e "${YELLOW}   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞:${NC}"
                tail -10 "${LOG_DIR}/${service_name}.log" | sed 's/^/   /'
            fi
            
            return 1
        fi
        
        sleep $RETRY_DELAY
        echo -n "."
    done
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ –Ω–∞ –ø–æ—Ä—Ç—É
kill_port() {
    local port=$1
    local pids=$(lsof -ti :${port} 2>/dev/null || true)
    
    if [ -n "$pids" ]; then
        echo -e "${YELLOW}   –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ ${port}...${NC}"
        echo "$pids" | xargs -r kill -9 2>/dev/null || true
        sleep 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Node.js —Å–µ—Ä–≤–∏—Å–∞
start_node_service() {
    local service_dir=$1
    local service_name=$2
    local port=$3
    
    echo -e "${BLUE}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ ${service_name}...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ ! -d "${service_dir}" ]; then
        echo -e "${RED}‚úó –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${service_dir} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
        return 1
    fi
    
    # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ –µ—Å–ª–∏ –∑–∞–Ω—è—Ç
    kill_port $port
    
    # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
    cd "${service_dir}"
    
    local log_file="${LOG_DIR}/${service_name}.log"
    local pid_file="${PID_DIR}/${service_name}.pid"
    
    # –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–≥–æ –ª–æ–≥–∞ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 1000 —Å—Ç—Ä–æ–∫)
    if [ -f "$log_file" ]; then
        tail -1000 "$log_file" > "${log_file}.tmp"
        mv "${log_file}.tmp" "$log_file"
    fi
    
    # –ó–∞–ø—É—Å–∫ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    PORT=$port \
    HOST=0.0.0.0 \
    DATABASE_URL="${DATABASE_URL:-postgresql://pg:pg@localhost:5434/wt}" \
    NODE_ENV="${NODE_ENV:-development}" \
    nohup node src/main.js >> "$log_file" 2>&1 &
    
    local pid=$!
    echo $pid > "$pid_file"
    
    cd - > /dev/null
    
    echo -e "${GREEN}   –ó–∞–ø—É—â–µ–Ω (PID: $pid)${NC}"
    
    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    sleep 1
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å–µ –µ—â–µ –∂–∏–≤
    if ! kill -0 $pid 2>/dev/null; then
        echo -e "${RED}‚úó –ü—Ä–æ—Ü–µ—Å—Å ${service_name} –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞${NC}"
        echo -e "${YELLOW}   –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞:${NC}"
        tail -20 "$log_file" | sed 's/^/   /'
        return 1
    fi
    
    return 0
}

# –®–∞–≥ 1: –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (Docker)
echo -e "${GREEN}üê≥ –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã (PostgreSQL, MinIO)...${NC}"

if command -v docker-compose &> /dev/null || command -v docker &> /dev/null; then
    # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    docker-compose down 2>/dev/null || true
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É
    docker-compose up -d db minio
    
    echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL...${NC}"
    
    for i in {1..60}; do
        if docker-compose exec -T db pg_isready -U pg > /dev/null 2>&1; then
            echo -e "${GREEN}‚úì PostgreSQL –≥–æ—Ç–æ–≤!${NC}"
            break
        fi
        if [ $i -eq 60 ]; then
            echo -e "${RED}‚úó Timeout: PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤${NC}"
            exit 1
        fi
        echo -n "."
        sleep 1
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞/—Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    echo -e "${YELLOW}üìù –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
    docker-compose exec -T db psql -U pg -d postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'wt'" | grep -q 1 || \
        docker-compose exec -T db psql -U pg -d postgres -c "CREATE DATABASE wt"
    
    echo -e "${GREEN}‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞${NC}"
    
    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    echo -e "${GREEN}üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π Prisma...${NC}"
    export DATABASE_URL="postgresql://pg:pg@localhost:5434/wt"
    npx prisma generate
    npx prisma migrate deploy 2>/dev/null || npx prisma db push --skip-generate
    
    echo -e "${GREEN}‚úì –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  Docker –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫ –∑–∞–ø—É—Å–∫–∞ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã${NC}"
    echo -e "${YELLOW}   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:5434${NC}"
fi

echo ""

# –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${GREEN}üîß –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

SERVICES=(
    "apps/svc-auth:svc-auth:3001"
    "apps/svc-catalog:svc-catalog:3002"
    "apps/svc-enquiries:svc-enquiries:3003"
    "apps/svc-billing:svc-billing:3004"
    "apps/svc-vendors:svc-vendors:3005"
    "apps/svc-guests:svc-guests:3006"
    "apps/svc-payments:svc-payments:3007"
)

FAILED_SERVICES=()

for service_info in "${SERVICES[@]}"; do
    IFS=':' read -r dir name port <<< "$service_info"
    
    if [ -d "$dir" ]; then
        if start_node_service "$dir" "$name" "$port"; then
            # –£—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω
            :
        else
            FAILED_SERVICES+=("$name")
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫ ${name} (–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞)${NC}"
    fi
done

echo ""

# –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ health-endpoints –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${GREEN}üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health-endpoints —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

HEALTH_FAILED=()

for service_info in "${SERVICES[@]}"; do
    IFS=':' read -r dir name port <<< "$service_info"
    
    if [ -d "$dir" ] && ! [[ " ${FAILED_SERVICES[@]} " =~ " ${name} " ]]; then
        if ! wait_for_service "$name" "$port" "/healthz" 30; then
            HEALTH_FAILED+=("$name:$port")
        fi
    fi
done

echo ""

# –®–∞–≥ 4: –ó–∞–ø—É—Å–∫ Next.js —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo -e "${GREEN}üåê –ó–∞–ø—É—Å–∫ Next.js —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...${NC}"

kill_port 3000

export DATABASE_URL="postgresql://pg:pg@localhost:5434/wt"
export INTERNAL_API_URL="http://localhost"
export PORT=3000
export HOST=0.0.0.0

nohup npm run dev -- -H 0.0.0.0 -p 3000 >> "${LOG_DIR}/next.log" 2>&1 &
NEXT_PID=$!
echo $NEXT_PID > "${PID_DIR}/next.pid"

echo -e "${GREEN}   –ó–∞–ø—É—â–µ–Ω (PID: $NEXT_PID)${NC}"

# –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Next.js
echo -n "   –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ Next.js... "
for i in {1..60}; do
    if curl -fsS "http://localhost:3000/api/healthz" >/dev/null 2>&1 || \
       curl -fsS "http://localhost:3000/" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úì –ì–æ—Ç–æ–≤${NC}"
        break
    fi
    
    if [ $i -eq 60 ]; then
        echo -e "${YELLOW}‚ö† Timeout, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º${NC}"
    fi
    
    sleep 2
    echo -n "."
done

echo ""

# –®–∞–≥ 5: –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
echo -e "${BLUE}=================================================="
echo "üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢"
echo "==================================================${NC}"
echo ""

if [ ${#FAILED_SERVICES[@]} -eq 0 ] && [ ${#HEALTH_FAILED[@]} -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –í–°–ï –°–ï–†–í–ò–°–´ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù–´ –ò –†–ê–ë–û–¢–ê–Æ–¢!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´:${NC}"
    
    if [ ${#FAILED_SERVICES[@]} -gt 0 ]; then
        echo -e "${RED}   –ù–µ –∑–∞–ø—É—Å—Ç–∏–ª–∏—Å—å:${NC}"
        for svc in "${FAILED_SERVICES[@]}"; do
            echo -e "${RED}     - ${svc}${NC}"
        done
    fi
    
    if [ ${#HEALTH_FAILED[@]} -gt 0 ]; then
        echo -e "${RED}   Health-check –Ω–µ –ø—Ä–æ—à–ª–∏:${NC}"
        for svc in "${HEALTH_FAILED[@]}"; do
            echo -e "${RED}     - ${svc}${NC}"
        done
    fi
fi

echo ""
echo -e "${BLUE}üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
check_service_status() {
    local name=$1
    local port=$2
    local path=${3:-/}
    
    if curl -fsS "http://localhost:${port}${path}" >/dev/null 2>&1; then
        echo -e "${GREEN}‚úì${NC}"
    else
        echo -e "${RED}‚úó${NC}"
    fi
}

printf "%-20s %-30s %-10s\n" "–°–µ—Ä–≤–∏—Å" "URL" "–°—Ç–∞—Ç—É—Å"
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
printf "%-20s %-30s %-10s\n" "Frontend" "http://localhost:3000" "$(check_service_status "Frontend" 3000 "/")"
printf "%-20s %-30s %-10s\n" "Auth Service" "http://localhost:3001/healthz" "$(check_service_status "Auth" 3001 "/healthz")"
printf "%-20s %-30s %-10s\n" "Catalog Service" "http://localhost:3002/healthz" "$(check_service_status "Catalog" 3002 "/healthz")"
printf "%-20s %-30s %-10s\n" "Enquiries" "http://localhost:3003/healthz" "$(check_service_status "Enquiries" 3003 "/healthz")"
printf "%-20s %-30s %-10s\n" "Billing" "http://localhost:3004/healthz" "$(check_service_status "Billing" 3004 "/healthz")"
printf "%-20s %-30s %-10s\n" "Vendors" "http://localhost:3005/healthz" "$(check_service_status "Vendors" 3005 "/healthz")"
printf "%-20s %-30s %-10s\n" "Guests" "http://localhost:3006/healthz" "$(check_service_status "Guests" 3006 "/healthz")"
printf "%-20s %-30s %-10s\n" "Payments" "http://localhost:3007/healthz" "$(check_service_status "Payments" 3007 "/healthz")"
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
printf "%-20s %-30s\n" "PostgreSQL" "localhost:5434"
printf "%-20s %-30s\n" "MinIO Console" "http://localhost:9001"

echo ""
echo -e "${GREEN}üí° –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${NC}"
echo "   –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤:      tail -f ${LOG_DIR}/<service>.log"
echo "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:           ./scripts/stop-dev-full.sh"
echo "   Smoke —Ç–µ—Å—Ç—ã:         ./scripts/smoke.sh"
echo "   –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:         ./scripts/diagnose-services.sh"
echo ""
echo -e "${BLUE}üìÅ –õ–æ–≥–∏: ${LOG_DIR}${NC}"
echo -e "${BLUE}üìÅ PID —Ñ–∞–π–ª—ã: ${PID_DIR}${NC}"
echo "=================================================="

# –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–æ–≤
if [ ${#FAILED_SERVICES[@]} -eq 0 ] && [ ${#HEALTH_FAILED[@]} -eq 0 ]; then
    echo ""
    echo -e "${YELLOW}üß™ –ó–∞–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–æ–≤...${NC}"
    sleep 2
    if ./scripts/smoke.sh; then
        echo -e "${GREEN}‚úÖ Smoke —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã!${NC}"
        exit 0
    else
        echo -e "${RED}‚ùå Smoke —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã${NC}"
        echo -e "${YELLOW}   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª–µ–π${NC}"
        exit 1
    fi
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ü—Ä–æ–ø—É—Å–∫ smoke —Ç–µ—Å—Ç–æ–≤ –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å –∑–∞–ø—É—Å–∫–æ–º${NC}"
    exit 1
fi
