#!/bin/bash
# ============================================
# –°–∫—Ä–∏–ø—Ç –∑–∞–ø—É—Å–∫–∞ –ø–æ–ª–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ WeddingTech
# ============================================

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "${BLUE}=================================================="
echo "üöÄ –ó–ê–ü–£–°–ö –ü–†–û–ï–ö–¢–ê WEDDINGTECH (Full Stack)"
echo "==================================================${NC}"
echo ""

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è PID —Ñ–∞–π–ª–æ–≤
PID_DIR="/run/wed"
if [ ! -d "$PID_DIR" ]; then
    echo -e "${YELLOW}üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è PID —Ñ–∞–π–ª–æ–≤...${NC}"
    sudo mkdir -p "$PID_DIR"
    sudo chmod 777 "$PID_DIR"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞...${NC}"
    cat > .env << 'EOF'
# Database
DATABASE_URL=postgresql://pg:pg@localhost:5434/wt

# Internal API URL (for Next.js rewrites)
INTERNAL_API_URL=http://localhost

# Application
NODE_ENV=development
PORT=3000
HOST=0.0.0.0

# Auth
NEXTAUTH_SECRET=dev-secret-change-in-production
NEXTAUTH_URL=http://localhost:3000

# Minio
MINIO_ENDPOINT=localhost
MINIO_PORT=9000
MINIO_ACCESS_KEY=minio
MINIO_SECRET_KEY=minio123
EOF
    echo -e "${GREEN}‚úì –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω${NC}"
fi

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
export $(cat .env | grep -v '^#' | xargs)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞
check_and_free_port() {
    local port=$1
    local service=$2
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–Ω—è—Ç –ª–∏ –ø–æ—Ä—Ç
    if ss -lntp 2>/dev/null | grep -q ":${port} "; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ü–æ—Ä—Ç ${port} –∑–∞–Ω—è—Ç. –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º...${NC}"
        
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ PID –∏–∑ —Ñ–∞–π–ª–∞
        local pid_file="${PID_DIR}/${service}.pid"
        if [ -f "$pid_file" ]; then
            local old_pid=$(cat "$pid_file")
            if kill -0 "$old_pid" 2>/dev/null; then
                echo -e "${YELLOW}   –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π –ø—Ä–æ—Ü–µ—Å—Å (PID: $old_pid)${NC}"
                kill "$old_pid" 2>/dev/null || true
                sleep 1
                # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å—ë –µ—â—ë –∂–∏–≤, —É–±–∏–≤–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
                if kill -0 "$old_pid" 2>/dev/null; then
                    kill -9 "$old_pid" 2>/dev/null || true
                fi
            fi
            rm -f "$pid_file"
        fi
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ —á–µ—Ä–µ–∑ lsof
        local pids=$(lsof -ti :${port} 2>/dev/null || true)
        if [ -n "$pids" ]; then
            echo -e "${YELLOW}   –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞ –ø–æ—Ä—Ç—É ${port}: $pids${NC}"
            echo "$pids" | xargs -r kill -9 2>/dev/null || true
        fi
        
        sleep 1
        echo -e "${GREEN}‚úì –ü–æ—Ä—Ç ${port} –æ—Å–≤–æ–±–æ–∂–¥—ë–Ω${NC}"
    fi
}

# –ó–∞–ø—É—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ Minio
echo -e "${GREEN}üê≥ –ó–∞–ø—É—Å–∫ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã...${NC}"
docker-compose up -d db minio

echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL...${NC}"
# –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–¥–æ 60 —Å–µ–∫—É–Ω–¥)
for i in {1..60}; do
    if docker-compose exec -T db pg_isready -U pg > /dev/null 2>&1; then
        echo -e "${GREEN}‚úì PostgreSQL –≥–æ—Ç–æ–≤!${NC}"
        break
    fi
    if [ $i -eq 60 ]; then
        echo -e "${RED}‚úó Timeout: PostgreSQL –Ω–µ –≥–æ—Ç–æ–≤ –ø–æ—Å–ª–µ 60 —Å–µ–∫—É–Ω–¥${NC}"
        exit 1
    fi
    echo -n "."
    sleep 1
done

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
echo -e "${YELLOW}üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö 'wt'...${NC}"
docker-compose exec -T db psql -U pg -d postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'wt'" | grep -q 1 || \
    docker-compose exec -T db psql -U pg -d postgres -c "CREATE DATABASE wt" && \
    echo -e "${GREEN}‚úì –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö 'wt' –≥–æ—Ç–æ–≤–∞${NC}"

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
echo -e "${GREEN}üóÑÔ∏è  –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...${NC}"
npx prisma generate
npx prisma migrate deploy 2>/dev/null || npx prisma migrate dev --name init

# –°–æ–∑–¥–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
run_service() {
    local service=$1
    local port=$2
    
    check_and_free_port "$port" "$service"
    
    echo -e "${BLUE}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ ${service} –Ω–∞ –ø–æ—Ä—Ç—É ${port}...${NC}"
    cd "apps/${service}"
    
    # –°–æ–∑–¥–∞—ë–º –ª–æ–≥-—Ñ–∞–π–ª —Å —Ä–æ—Ç–∞—Ü–∏–µ–π
    local log_file="/tmp/${service}.log"
    if [ -f "$log_file" ]; then
        # –ü—Ä–æ—Å—Ç–∞—è —Ä–æ—Ç–∞—Ü–∏—è: –µ—Å–ª–∏ —Ñ–∞–π–ª –±–æ–ª—å—à–µ 5 –ú–ë, —Å–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø
        local size=$(stat -f%z "$log_file" 2>/dev/null || stat -c%s "$log_file" 2>/dev/null)
        if [ "$size" -gt 5242880 ]; then
            for i in 4 3 2 1; do
                [ -f "${log_file}.$i" ] && mv "${log_file}.$i" "${log_file}.$((i+1))"
            done
            mv "$log_file" "${log_file}.1"
        fi
    fi
    
    PORT=${port} HOST=${HOST:-0.0.0.0} npm start > "$log_file" 2>&1 &
    local pid=$!
    echo $pid > "${PID_DIR}/${service}.pid"
    echo -e "${GREEN}‚úì ${service} –∑–∞–ø—É—â–µ–Ω (PID: $pid, –ø–æ—Ä—Ç: ${port})${NC}"
    cd ../..
}

# –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${GREEN}üîß –ó–∞–ø—É—Å–∫ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –∫–∞–∂–¥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
if [ -d "apps/svc-auth" ]; then
    run_service "svc-auth" 3001
fi

if [ -d "apps/svc-catalog" ]; then
    run_service "svc-catalog" 3002
fi

if [ -d "apps/svc-enquiries" ]; then
    run_service "svc-enquiries" 3003
fi

if [ -d "apps/svc-billing" ]; then
    run_service "svc-billing" 3004
fi

if [ -d "apps/svc-vendors" ]; then
    run_service "svc-vendors" 3005
fi

if [ -d "apps/svc-guests" ]; then
    run_service "svc-guests" 3006
fi

if [ -d "apps/svc-payments" ]; then
    run_service "svc-payments" 3007
fi

echo -e "${YELLOW}‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ (5 —Å–µ–∫)...${NC}"
sleep 5

# –ó–∞–ø—É—Å–∫ Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
check_and_free_port 3000 "next"

echo -e "${GREEN}üåê –ó–∞–ø—É—Å–∫ Next.js —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞...${NC}"
npm run dev -- -H ${HOST:-0.0.0.0} -p 3000 > /tmp/next.log 2>&1 &
NEXT_PID=$!
echo $NEXT_PID > "${PID_DIR}/next.pid"
echo -e "${GREEN}‚úì Next.js –∑–∞–ø—É—â–µ–Ω (PID: $NEXT_PID, –ø–æ—Ä—Ç: 3000)${NC}"

echo ""
echo -e "${GREEN}=================================================="
echo "‚úÖ –ü–†–û–ï–ö–¢ –£–°–ü–ï–®–ù–û –ó–ê–ü–£–©–ï–ù!"
echo "==================================================${NC}"
echo ""
echo -e "${BLUE}üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã:${NC}"
echo ""
printf "%-20s %-25s %s\n" "–°–µ—Ä–≤–∏—Å" "URL" "–°—Ç–∞—Ç—É—Å"
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
printf "%-20s %-25s %s\n" "Frontend" "http://localhost:3000" "$(ss -lntp 2>/dev/null | grep -q ':3000 ' && echo '‚úì' || echo '‚úó')"
printf "%-20s %-25s %s\n" "Auth Service" "http://localhost:3001" "$(ss -lntp 2>/dev/null | grep -q ':3001 ' && echo '‚úì' || echo '‚úó')"
printf "%-20s %-25s %s\n" "Catalog Service" "http://localhost:3002" "$(ss -lntp 2>/dev/null | grep -q ':3002 ' && echo '‚úì' || echo '‚úó')"
printf "%-20s %-25s %s\n" "Enquiries" "http://localhost:3003" "$(ss -lntp 2>/dev/null | grep -q ':3003 ' && echo '‚úì' || echo '‚úó')"
printf "%-20s %-25s %s\n" "Billing" "http://localhost:3004" "$(ss -lntp 2>/dev/null | grep -q ':3004 ' && echo '‚úì' || echo '‚úó')"
printf "%-20s %-25s %s\n" "Vendors" "http://localhost:3005" "$(ss -lntp 2>/dev/null | grep -q ':3005 ' && echo '‚úì' || echo '‚úó')"
printf "%-20s %-25s %s\n" "Guests" "http://localhost:3006" "$(ss -lntp 2>/dev/null | grep -q ':3006 ' && echo '‚úì' || echo '‚úó')"
printf "%-20s %-25s %s\n" "Payments" "http://localhost:3007" "$(ss -lntp 2>/dev/null | grep -q ':3007 ' && echo '‚úì' || echo '‚úó')"
echo "‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ"
printf "%-20s %-25s\n" "PostgreSQL" "localhost:5434"
printf "%-20s %-25s\n" "MinIO Console" "http://localhost:9001"
echo ""
echo -e "${YELLOW}üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:${NC}"
echo "   Ctrl+C           - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã"
echo "   ./scripts/stop-dev-full.sh - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã —Å–∫—Ä–∏–ø—Ç–æ–º"
echo ""
echo -e "${GREEN}üí° –õ–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–æ–≤ –≤ /tmp/*.log${NC}"
echo -e "${GREEN}üí° PID —Ñ–∞–π–ª—ã –≤ ${PID_DIR}/*.pid${NC}"
echo "=================================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
cleanup() {
    echo ""
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    for pid_file in "${PID_DIR}"/*.pid; do
        if [ -f "$pid_file" ]; then
            local pid=$(cat "$pid_file")
            local service=$(basename "$pid_file" .pid)
            if kill -0 "$pid" 2>/dev/null; then
                echo -e "${YELLOW}   –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ${service} (PID: ${pid})${NC}"
                kill "$pid" 2>/dev/null || true
                sleep 0.5
                # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –≤—Å—ë –µ—â—ë –∂–∏–≤, —É–±–∏–≤–∞–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
                if kill -0 "$pid" 2>/dev/null; then
                    kill -9 "$pid" 2>/dev/null || true
                fi
            fi
            rm -f "$pid_file"
        fi
    done
    
    echo -e "${GREEN}‚úì –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
    exit 0
}

trap cleanup SIGINT SIGTERM

# –û–∂–∏–¥–∞–Ω–∏–µ
wait $NEXT_PID
