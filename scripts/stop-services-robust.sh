#!/bin/bash
# ============================================
# –ù–∞–¥–µ–∂–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
# ============================================

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

PID_DIR="/tmp/weddingtech-pids"
LOG_DIR="/tmp/weddingtech-logs"

echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤ WeddingTech...${NC}"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
stop_service() {
    local service=$1
    local pid_file="${PID_DIR}/${service}.pid"
    
    if [ -f "$pid_file" ]; then
        local pid=$(cat "$pid_file")
        echo -n "  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ${service} (PID: ${pid})... "
        
        if kill -0 "$pid" 2>/dev/null; then
            kill "$pid" 2>/dev/null || true
            
            # –ñ–¥–µ–º –¥–æ 5 —Å–µ–∫—É–Ω–¥
            for i in {1..10}; do
                if ! kill -0 "$pid" 2>/dev/null; then
                    echo -e "${GREEN}‚úì${NC}"
                    rm -f "$pid_file"
                    return 0
                fi
                sleep 0.5
            done
            
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞
            echo -n "(–ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ)... "
            kill -9 "$pid" 2>/dev/null || true
            echo -e "${GREEN}‚úì${NC}"
        else
            echo -e "${YELLOW}—É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        fi
        
        rm -f "$pid_file"
    else
        echo -e "  ${service}: ${YELLOW}–Ω–µ –∑–∞–ø—É—â–µ–Ω${NC}"
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üîß –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤:"
if [ -d "$PID_DIR" ]; then
    for pid_file in "${PID_DIR}"/*.pid; do
        if [ -f "$pid_file" ]; then
            service=$(basename "$pid_file" .pid)
            stop_service "$service"
        fi
    done
else
    echo "  ${YELLOW}PID –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
fi

echo ""

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–∞ –ø–æ—Ä—Ç–∞—Ö (–Ω–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ PID —Ñ–∞–π–ª—ã –ø–æ—Ç–µ—Ä—è–Ω—ã)
echo "üîå –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤:"

ports=(3000 3001 3002 3003 3004 3005 3006 3007)

for port in "${ports[@]}"; do
    echo -n "  –ü–æ—Ä—Ç ${port}... "
    
    pids=$(lsof -ti :${port} 2>/dev/null || true)
    
    if [ -n "$pids" ]; then
        echo "$pids" | xargs -r kill -9 2>/dev/null || true
        echo -e "${GREEN}‚úì –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω${NC}"
    else
        echo -e "${YELLOW}—Å–≤–æ–±–æ–¥–µ–Ω${NC}"
    fi
done

echo ""

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"

if command -v docker-compose &> /dev/null; then
    docker-compose down 2>/dev/null && echo -e "  ${GREEN}‚úì –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}" || echo -e "  ${YELLOW}‚ö† –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤${NC}"
elif command -v docker &> /dev/null; then
    echo "  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤—Ä—É—á–Ω—É—é..."
    for container in workspace-db-1 workspace-minio-1; do
        if docker ps -q --filter "name=${container}" | grep -q .; then
            docker stop "${container}" 2>/dev/null && echo -e "  ${GREEN}‚úì ${container} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        fi
    done
else
    echo -e "  ${YELLOW}Docker –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
fi

echo ""

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
read -p "–£–¥–∞–ª–∏—Ç—å –ª–æ–≥-—Ñ–∞–π–ª—ã? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    if [ -d "$LOG_DIR" ]; then
        rm -rf "$LOG_DIR"
        echo -e "${GREEN}‚úì –õ–æ–≥–∏ —É–¥–∞–ª–µ–Ω—ã${NC}"
    fi
fi

echo ""
echo -e "${GREEN}‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!${NC}"
