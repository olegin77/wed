#!/bin/bash
# ============================================
# –°–∫—Ä–∏–ø—Ç –±—ã—Å—Ç—Ä–æ–π —Å–±–æ—Ä–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ WeddingTech
# ============================================
# –í–µ—Ä—Å–∏—è: 1.0
# –î–∞—Ç–∞: 2025-10-23
# ============================================

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "=================================================="
echo "üöÄ –ë–´–°–¢–†–ê–Ø –°–ë–û–†–ö–ê –ü–†–û–ï–ö–¢–ê WEDDINGTECH"
echo "=================================================="
echo ""

# –¶–≤–µ—Ç–æ–≤—ã–µ –∫–æ–¥—ã –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
echo -e "${YELLOW}üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
NODE_VERSION=$(node -v)
echo "   ‚úì Node.js: $NODE_VERSION"

# –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –≤–µ—Ä—Å–∏—è –Ω–µ 20.x
if [[ ! $NODE_VERSION =~ ^v20\. ]]; then
    echo -e "${YELLOW}   ‚ö†Ô∏è  –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è Node.js v20.x (—Ç–µ–∫—É—â–∞—è: $NODE_VERSION)${NC}"
fi

NPM_VERSION=$(npm -v)
echo "   ‚úì npm: $NPM_VERSION"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è .env —Ñ–∞–π–ª–∞
if [ ! -f .env ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞...${NC}"
    if [ -f .env.example ]; then
        cp .env.example .env
        echo -e "${GREEN}   ‚úì –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω –∏–∑ .env.example${NC}"
    else
        echo -e "${RED}   ‚úó –§–∞–π–ª .env.example –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–≥–æ .env...${NC}"
        cat > .env << 'EOF'
# Database
DATABASE_URL=postgresql://pg:pg@localhost:5434/wt

# Next.js
NEXT_PUBLIC_API_URL=http://localhost:3000

# Application
NODE_ENV=development
EOF
        echo -e "${GREEN}   ‚úì –°–æ–∑–¥–∞–Ω –±–∞–∑–æ–≤—ã–π —Ñ–∞–π–ª .env${NC}"
    fi
    echo ""
fi

# –®–∞–≥ 1: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
echo -e "${GREEN}üì¶ –®–∞–≥ 1/5: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
if [ ! -d "node_modules" ]; then
    echo "   –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º npm –ø–∞–∫–µ—Ç—ã..."
    npm install
else
    echo "   node_modules —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    npm update
fi
echo -e "${GREEN}   ‚úì –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã${NC}"
echo ""

# –®–∞–≥ 2: –ó–∞–ø—É—Å–∫ Docker-—Å–µ—Ä–≤–∏—Å–æ–≤
echo -e "${GREEN}üê≥ –®–∞–≥ 2/5: –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker-—Å–µ—Ä–≤–∏—Å–æ–≤...${NC}"
if command -v docker-compose &> /dev/null; then
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –ë–î
    if ! docker-compose ps | grep -q "db.*Up"; then
        echo "   –ó–∞–ø—É—Å–∫–∞–µ–º PostgreSQL..."
        docker-compose up -d db
        echo "   –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –ë–î (5 —Å–µ–∫)..."
        sleep 5
    else
        echo "   ‚úì PostgreSQL —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    fi
    
    # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ–º MinIO
    if ! docker-compose ps | grep -q "minio.*Up"; then
        echo "   –ó–∞–ø—É—Å–∫–∞–µ–º MinIO..."
        docker-compose up -d minio
    else
        echo "   ‚úì MinIO —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
    fi
else
    echo -e "${YELLOW}   ‚ö†Ô∏è  docker-compose –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç —à–∞–≥.${NC}"
    echo -e "${YELLOW}   –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ localhost:5434${NC}"
fi
echo ""

# –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client
echo -e "${GREEN}üóÑÔ∏è  –®–∞–≥ 3/5: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Prisma Client...${NC}"
if [ -f "schema.prisma" ]; then
    npx prisma generate
    echo -e "${GREEN}   ‚úì Prisma Client —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω${NC}"
else
    echo -e "${YELLOW}   ‚ö†Ô∏è  schema.prisma –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º${NC}"
fi
echo ""

# –®–∞–≥ 4: –ú–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo -e "${GREEN}üîÑ –®–∞–≥ 4/5: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π –ë–î...${NC}"
if [ -f "schema.prisma" ]; then
    echo "   –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏..."
    npx prisma migrate deploy 2>/dev/null || {
        echo -e "${YELLOW}   ‚ö†Ô∏è  –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã (–≤–æ–∑–º–æ–∂–Ω–æ, –ë–î –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞)${NC}"
        echo -e "${YELLOW}   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—Ä—É—á–Ω—É—é: npx prisma migrate dev${NC}"
    }
else
    echo -e "${YELLOW}   ‚ö†Ô∏è  schema.prisma –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º${NC}"
fi
echo ""

# –®–∞–≥ 5: –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
echo -e "${GREEN}üèóÔ∏è  –®–∞–≥ 5/5: –°–±–æ—Ä–∫–∞ Next.js –ø—Ä–æ–µ–∫—Ç–∞...${NC}"
npm run build

echo ""
echo "=================================================="
echo -e "${GREEN}‚úÖ –°–ë–û–†–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê –£–°–ü–ï–®–ù–û!${NC}"
echo "=================================================="
echo ""
echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
echo "  npm run dev    - –ó–∞–ø—É—Å–∫ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ (http://localhost:3000)"
echo "  npm run build  - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è —Å–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞"
echo "  npm run start  - –ó–∞–ø—É—Å–∫ production —Å–µ—Ä–≤–µ—Ä–∞"
echo ""
echo "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:"
echo "  docker-compose up -d      - –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö Docker-—Å–µ—Ä–≤–∏—Å–æ–≤"
echo "  docker-compose down       - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö Docker-—Å–µ—Ä–≤–∏—Å–æ–≤"
echo "  npx prisma studio         - –û—Ç–∫—Ä—ã—Ç—å Prisma Studio (UI –¥–ª—è –ë–î)"
echo "  npx prisma migrate dev    - –ü—Ä–∏–º–µ–Ω–∏—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ dev —Ä–µ–∂–∏–º–µ"
echo ""
echo "=================================================="
